"use strict";(self.webpackChunkguardian=self.webpackChunkguardian||[]).push([[819],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return v}});var a=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function u(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=a.createContext({}),d=function(e){var r=a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=d(e.components);return a.createElement(l.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},p=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=d(t),v=n,f=p["".concat(l,".").concat(v)]||p[v]||s[v]||i;return t?a.createElement(f,o(o({ref:r},c),{},{components:t})):a.createElement(f,o({ref:r},c))}));function v(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,o=new Array(i);o[0]=p;var u={};for(var l in r)hasOwnProperty.call(r,l)&&(u[l]=r[l]);u.originalType=e,u.mdxType="string"==typeof e?e:n,o[1]=u;for(var d=2;d<i;d++)o[d]=t[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},7912:function(e,r,t){t.r(r),t.d(r,{assets:function(){return l},contentTitle:function(){return o},default:function(){return s},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return d}});var a=t(3117),n=(t(7294),t(3905));const i={},o="Architecture",u={unversionedId:"contribute/architecture",id:"contribute/architecture",title:"Architecture",description:"Basic building blocks of Guardian are",source:"@site/docs/contribute/architecture.md",sourceDirName:"contribute",slug:"/contribute/architecture",permalink:"/guardian/docs/contribute/architecture",draft:!1,editUrl:"https://github.com/goto/guardian/edit/master/docs/docs/contribute/architecture.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Adding new provider",permalink:"/guardian/docs/contribute/provider"},next:{title:"Contribution Process",permalink:"/guardian/docs/contribute/contribution"}},l={},d=[{value:"Guardian CLI",id:"guardian-cli",level:4},{value:"Guardian Service",id:"guardian-service",level:4},{value:"Jobs",id:"jobs",level:4},{value:"Guardian Database",id:"guardian-database",level:4},{value:"Guardian Provider",id:"guardian-provider",level:4},{value:"Providers Supported",id:"providers-supported",level:2},{value:"1. Grafana Provider",id:"1-grafana-provider",level:3},{value:"2. Metabase Provider",id:"2-metabase-provider",level:3},{value:"3. Bigquery Provider",id:"3-bigquery-provider",level:3},{value:"4. Tableau Provider",id:"4-tableau-provider",level:3}],c={toc:d};function s(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"architecture"},"Architecture"),(0,n.kt)("p",null,"Basic building blocks of Guardian are"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Guardian CLI"),(0,n.kt)("li",{parentName:"ul"},"Guardian Service"),(0,n.kt)("li",{parentName:"ul"},"Guardian Database"),(0,n.kt)("li",{parentName:"ul"},"Guardian Providers"),(0,n.kt)("li",{parentName:"ul"},"Jobs")),(0,n.kt)("h4",{id:"guardian-cli"},"Guardian CLI"),(0,n.kt)("p",null,"Guardian CLI will be able to can start a service that controls all that Guardian has to offer. Guardian CLI uses GRPC to communicate with the guardian service for almost all the operations."),(0,n.kt)("h4",{id:"guardian-service"},"Guardian Service"),(0,n.kt)("p",null,"Guardian service exposes few REST endpoints that can be used with simple curl request for registering or updating a provider, creating and granting/revoking appeals or checking the status of a appeal, creating policies etc."),(0,n.kt)("h4",{id:"jobs"},"Jobs"),(0,n.kt)("p",null,"You can run ",(0,n.kt)("a",{parentName:"p",href:"/guardian/docs/reference/jobs"},"jobs")," using ",(0,n.kt)("inlineCode",{parentName:"p"},"guardian")," cli command to perform one time actions. You can also run them periodically using cronjob through ",(0,n.kt)("a",{parentName:"p",href:"/guardian/docs/guides/deployment#use-the-helm-chart"},"helm chart"),".\nThese jobs support in keeping the list of resources up to date, revoking expired grants, notifying users about expiring grants, etc."),(0,n.kt)("h4",{id:"guardian-database"},"Guardian Database"),(0,n.kt)("p",null,"Provider once registered needs to be stored somewhere as a source of truth. Guardian uses postgres as a storage engine to store the provider details, all the resource details which fall under the provider, all the policy information and appeals etc."),(0,n.kt)("h4",{id:"guardian-provider"},"Guardian Provider"),(0,n.kt)("p",null,"Guardian itself doesn't govern how a appeal will be executed. It only provides the building blocks. A provider for any resource type needs to be build and integrated with Guardian in order to support it's access flow. Any provider has 4 components"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Config - This defines the permissions and credential configuration of a resource."),(0,n.kt)("li",{parentName:"ul"},"Client - This defines the client configurations and methods."),(0,n.kt)("li",{parentName:"ul"},"Provider - This deals with the interaction with a provider."),(0,n.kt)("li",{parentName:"ul"},"Resource - This defines all the resources and functions associated with them.")),(0,n.kt)("h2",{id:"providers-supported"},"Providers Supported"),(0,n.kt)("h3",{id:"1-grafana-provider"},"1. Grafana Provider"),(0,n.kt)("h3",{id:"2-metabase-provider"},"2. Metabase Provider"),(0,n.kt)("h3",{id:"3-bigquery-provider"},"3. Bigquery Provider"),(0,n.kt)("h3",{id:"4-tableau-provider"},"4. Tableau Provider"))}s.isMDXComponent=!0}}]);