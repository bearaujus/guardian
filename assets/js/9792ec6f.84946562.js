"use strict";(self.webpackChunkguardian=self.webpackChunkguardian||[]).push([[889],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),f=l(t),d=o,m=f["".concat(c,".").concat(d)]||f[d]||u[d]||a;return t?r.createElement(m,i(i({ref:n},s),{},{components:t})):r.createElement(m,i({ref:n},s))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},629:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return l}});var r=t(3117),o=(t(7294),t(3905));const a={},i="Notification configuration",p={unversionedId:"guides/notification",id:"guides/notification",title:"Notification configuration",description:"Templates of slack notifications sent through guardian can be configured.",source:"@site/docs/guides/notification.md",sourceDirName:"guides",slug:"/guides/notification",permalink:"/guardian/docs/guides/notification",draft:!1,editUrl:"https://github.com/goto/guardian/edit/master/docs/docs/guides/notification.md",tags:[],version:"current",frontMatter:{}},c={},l=[{value:"Examples:",id:"examples",level:2},{value:"Only Text:",id:"only-text",level:3},{value:"Others (Sample approval notification):",id:"others-sample-approval-notification",level:3}],s={toc:l};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"notification-configuration"},"Notification configuration"),(0,o.kt)("p",null,"Templates of slack notifications sent through guardian can be configured.\nIt is a Json string having list of blocks(Json). Developers can configure list of blocks according to the notification UI needed.\nIt can be list of Texts, Sections, Buttons, inputs etc (Ref:",(0,o.kt)("a",{parentName:"p",href:"https://api.slack.com/reference/block-kit/block-elements"},"https://api.slack.com/reference/block-kit/block-elements"),")"),(0,o.kt)("h2",{id:"examples"},"Examples:"),(0,o.kt)("h3",{id:"only-text"},"Only Text:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'[{\n  "type": "section",\n  "text": {\n    "type": "mrkdwn", \n    "text": "You have an appeal created by {{.requestor}} requesting access to {{.resource_name}} with role {{.role}}. Appeal ID: {{.appeal_id}}"\n  } \n}]\n')),(0,o.kt)("h3",{id:"others-sample-approval-notification"},"Others (Sample approval notification):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "type": "section",\n    "text": {\n      "type": "mrkdwn",\n      "text": "You have an appeal created by {{.requestor}} requesting access to {{.resource_name}} with role {{.role}}. Appeal ID: {{.appeal_id}}"\n    }\n  },\n  {\n    "type": "section",\n    "fields": [\n      {\n        "type": "mrkdwn",\n        "text": "*Provider*\\\\n{{.provider_type}}"\n      },\n      {\n        "type": "mrkdwn",\n        "text": "*Resource Type:*\\\\n{{.resource_type}}"\n      }\n    ]\n  },\n  {\n    "type": "section",\n    "fields": [\n      {\n        "type": "mrkdwn",\n        "text": "*Resource:*\\\\n{{.resource_name}}"\n      },\n      {\n        "type": "mrkdwn",\n        "text": "*Account Id:*\\\\n{{.account_id}}"\n      }\n    ]\n  },\n  {\n    "type": "section",\n    "fields": [\n      {\n        "type": "mrkdwn",\n        "text": "*Role:*\\\\n{{.role}}"\n      },\n      {\n        "type": "mrkdwn",\n        "text": "*When:*\\\\n{{.created_at}}"\n      }\n    ]\n  },\n  {\n    "type": "section",\n    "text": {\n      "type": "mrkdwn",\n      "text": "*Console link:*\\nhttps://console.io/requests/{{.appeal_id}}"\n    }\n  },\n  {\n    "type": "input",\n    "element": {\n      "type": "plain_text_input",\n      "placeholder": {\n        "type": "plain_text",\n        "text": "Approve/Reject reason? (optional)"\n      },\n      "action_id": "reason"\n    },\n    "label": {\n      "type": "plain_text",\n      "text": "Reason"\n    }\n  },\n  {\n    "type": "actions",\n    "elements": [\n      {\n        "text": {\n          "type": "plain_text",\n          "emoji": true,\n          "text": "Approve"\n        },\n        "type": "button",\n        "value": "approved",\n        "style": "primary",\n        "url": "https://console.io/appeal_action?action=approve&appeal_id={{.appeal_id}}&approval_step={{.approval_step}}&actor={{.actor}}"\n      },\n      {\n        "text": {\n          "type": "plain_text",\n          "emoji": true,\n          "text": "Reject"\n        },\n        "type": "button",\n        "value": "rejected",\n        "style": "primary",\n        "url": "https://console.io/appeal_action?action=reject&appeal_id={{.appeal_id}}&approval_step={{.approval_step}}&actor={{.actor}}"\n      }\n    ]\n  }\n]\n')))}u.isMDXComponent=!0}}]);