"use strict";(self.webpackChunkguardian=self.webpackChunkguardian||[]).push([[584],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,g=p["".concat(l,".").concat(m)]||p[m]||s[m]||o;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3355:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return s},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return d}});var r=n(3117),a=(n(7294),n(3905));const o={},i="Google Cloud IAM",c={unversionedId:"providers/gcloud_iam",id:"providers/gcloud_iam",title:"Google Cloud IAM",description:"Prerequisites",source:"@site/docs/providers/gcloud_iam.md",sourceDirName:"providers",slug:"/providers/gcloud_iam",permalink:"/guardian/docs/providers/gcloud_iam",draft:!1,editUrl:"https://github.com/odpf/guardian/edit/master/docs/docs/providers/gcloud_iam.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Big Query",permalink:"/guardian/docs/providers/bigquery"},next:{title:"Tableau",permalink:"/guardian/docs/providers/tableau"}},l={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Access Management",id:"access-management",level:2},{value:"Config",id:"config",level:2},{value:"YAML Representation",id:"yaml-representation",level:4},{value:"<code>GCloudIAMAccountType</code>",id:"gcloudiamaccounttype",level:3},{value:"<code>GCloudIAMCredentials</code>",id:"gcloudiamcredentials",level:3},{value:"<code>GCloudIAMResourceType</code>",id:"gcloudiamresourcetype",level:3}],u={toc:d};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"google-cloud-iam"},"Google Cloud IAM"),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"A service account with ",(0,a.kt)("inlineCode",{parentName:"li"},"roles/iam.securityAdmin")," role at the project/organization level")),(0,a.kt)("h2",{id:"access-management"},"Access Management"),(0,a.kt)("p",null,"Google Cloud IAM can be registered into Guardian in organization or project level by specifying the ",(0,a.kt)("inlineCode",{parentName:"p"},"credentials.resource_name")," accordingly, ",(0,a.kt)("inlineCode",{parentName:"p"},"organizations/org-id")," for an organization, and ",(0,a.kt)("inlineCode",{parentName:"p"},"projects/project-id")," for a project. A provider instance, either it is an organzation or project, is considered as Guardian resource. Google Cloud predefined and custom roles can be selected as a role during appeal creation."),(0,a.kt)("h2",{id:"config"},"Config"),(0,a.kt)("h4",{id:"yaml-representation"},"YAML Representation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'# project\ntype: gcloud_iam\nurn: my-iam\nallowed_account_types:\n  - user\n  - serviceAccount\ncredentials:\n  service_account_key: <base64 encoded service account key json>\n  resource_name: projects/gcp-project-id\nappeal:\n  allow_active_access_extension_in: "7d"\nresources:\n  - type: project\n    policy:\n      id: my_policy\n      version: 1\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'# organization\ntype: gcloud_iam\nurn: my-iam\nallowed_account_types:\n  - user\n  - serviceAccount\ncredentials:\n  service_account_key: <base64 encoded service account key json>\n  resource_name: organizations/gcp-org-id\nappeal:\n  allow_active_access_extension_in: "7d"\nresources:\n  - type: organization\n    policy:\n      id: my_policy\n      version: 1\n')),(0,a.kt)("h3",{id:"gcloudiamaccounttype"},(0,a.kt)("inlineCode",{parentName:"h3"},"GCloudIAMAccountType")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"user")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"serviceAccount"))),(0,a.kt)("h3",{id:"gcloudiamcredentials"},(0,a.kt)("inlineCode",{parentName:"h3"},"GCloudIAMCredentials")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Fields"),(0,a.kt)("th",{parentName:"tr",align:"left"}))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"resource_name")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"string")," GCP Project ID in resource name format. Example: ",(0,a.kt)("inlineCode",{parentName:"td"},"projects/my-project-id"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"organizations/my-org-id"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"service_account_key")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"string")," Service account key JSON that has ",(0,a.kt)("a",{parentName:"td",href:"#prerequisites"},"prerequisites permissions"),". On provider creation, the value should be an base64 encoded JSON key.")))),(0,a.kt)("h3",{id:"gcloudiamresourcetype"},(0,a.kt)("inlineCode",{parentName:"h3"},"GCloudIAMResourceType")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"project")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"organization"))))}s.isMDXComponent=!0}}]);