"use strict";(self.webpackChunkguardian=self.webpackChunkguardian||[]).push([[296],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,g=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return r?n.createElement(g,i(i({ref:t},u),{},{components:r})):n.createElement(g,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6047:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var n=r(3117),a=(r(7294),r(3905));const o={},i="GCS",s={unversionedId:"providers/gcs",id:"providers/gcs",title:"GCS",description:"Google Cloud Storage(in short GCS) is the object storage service offered by Google Cloud. GCS has distinct namespaces called Buckets that each one contains multiple Objects which are used for storing the data.",source:"@site/docs/providers/gcs.md",sourceDirName:"providers",slug:"/providers/gcs",permalink:"/guardian/docs/providers/gcs",draft:!1,editUrl:"https://github.com/odpf/guardian/edit/master/docs/docs/providers/gcs.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Big Query",permalink:"/guardian/docs/providers/bigquery"},next:{title:"Tableau",permalink:"/guardian/docs/providers/tableau"}},l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Access Management",id:"access-management",level:2},{value:"Provider Config",id:"provider-config",level:2},{value:"GCS Account Types",id:"gcs-account-types",level:2},{value:"GCS Credentials",id:"gcs-credentials",level:2},{value:"GCS Resource Types",id:"gcs-resource-types",level:2},{value:"GCS Resource Permission",id:"gcs-resource-permission",level:2}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"gcs"},"GCS"),(0,a.kt)("p",null,"Google Cloud Storage(in short GCS) is the object storage service offered by Google Cloud. GCS has distinct namespaces called ",(0,a.kt)("strong",{parentName:"p"},"Buckets")," that each one contains multiple ",(0,a.kt)("strong",{parentName:"p"},"Objects")," which are used for storing the data. "),(0,a.kt)("p",null,"It provides features such as object versioning or fine-grain permissions (per object or bucket). Using GCS one can retrieve and upload files using a REST API, and this can extend infinitely with each object scaling up to the terabyte size."),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"A service account with ",(0,a.kt)("inlineCode",{parentName:"li"},"roles/storage.admin")," role at the project/organization level")),(0,a.kt)("h2",{id:"access-management"},"Access Management"),(0,a.kt)("p",null,"Access can be given only at the bucket level on Guardian as those allowed to be managed through these Google Cloud Storage APIs:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://cloud.google.com/storage/docs/samples/storage-add-bucket-iam-member"},"Bucket Access Control"))),(0,a.kt)("h2",{id:"provider-config"},"Provider Config"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"type: gcs\nurn: sample-URN\ncredentials:\n  service_account_key: <base64 encoded service account key json>\n  resource_name: projects/<gcs-project-id>\n  - type: bucket\n    policy:\n      id: my-first-policy\n      version: 1\n    roles:\n      - id: READER\n        name: Reader\n        description: 'Grants permission to list a bucket contents and read bucket metadata, excluding IAM policies'\n        permissions:\n          - roles/storage.legacyBucketReader\n      - id: WRITER\n        name: Writer\n        description: 'Grants permission to create, replace, and delete objects; list objects in a bucket'\n        permissions:\n          - roles/storage.legacyBucketWriter\n      - id: OWNER\n        name: Owner\n        description: 'Grants permission to update objects; list and update tag bindings; read object metadata when listing'\n        permissions:\n          - roles/storage.legacyBucketOwner\n      - id: ADMIN\n        name: Admin\n        description: 'Grants full control of buckets and objects'\n        permissions:\n          - roles/storage.admin\n      - id: OBJECTADMIN\n        name: ObjectAdmin\n        description: 'Grants full control over objects, including listing, creating, viewing, and deleting objects'\n        permissions:\n          - roles/storage.objectAdmin\n")),(0,a.kt)("h2",{id:"gcs-account-types"},"GCS Account Types"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"user"),(0,a.kt)("li",{parentName:"ul"},"serviceAccount"),(0,a.kt)("li",{parentName:"ul"},"group"),(0,a.kt)("li",{parentName:"ul"},"domain")),(0,a.kt)("h2",{id:"gcs-credentials"},"GCS Credentials"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Fields"),(0,a.kt)("th",{parentName:"tr",align:"left"}),(0,a.kt)("th",{parentName:"tr",align:"left"}))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"resource_name"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:"left"},"GCP Project ID in resource name format. Example: ",(0,a.kt)("inlineCode",{parentName:"td"},"projects/my-project-id"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"service_account_key"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Service account key JSON that has ",(0,a.kt)("a",{parentName:"td",href:"#prerequisites"},"prerequisites permissions"),".",(0,a.kt)("br",null)," On provider creation, the value should be an base64 encoded JSON key.")))),(0,a.kt)("h2",{id:"gcs-resource-types"},"GCS Resource Types"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Bucket")),(0,a.kt)("h2",{id:"gcs-resource-permission"},"GCS Resource Permission"),(0,a.kt)("p",null,"A Google Cloud predefined role name. ",(0,a.kt)("a",{parentName:"p",href:"https://cloud.google.com/storage/docs/access-control/iam-roles"},(0,a.kt)("inlineCode",{parentName:"a"},"Read More"))),(0,a.kt)("p",null,"For ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Bucket"))," resource type, the list of allowed permissions are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"roles/storage.admin")," "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"roles/storage.legacyBucketOwner")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"roles/storage.legacyBucketReader")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"roles/storage.legacyBucketWriter")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"roles/storage.legacyObjectOwner")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"roles/storage.legacyObjectReader")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"roles/storage.objectAdmin")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"roles/storage.objectCreator")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"roles/storage.objectViewer"))))}p.isMDXComponent=!0}}]);