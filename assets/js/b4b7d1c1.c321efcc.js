"use strict";(self.webpackChunkguardian=self.webpackChunkguardian||[]).push([[584],{3905:function(e,n,r){r.d(n,{Zo:function(){return d},kt:function(){return m}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),s=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},d=function(e){var n=s(e.components);return t.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(r),m=o,g=p["".concat(c,".").concat(m)]||p[m]||u[m]||a;return r?t.createElement(g,i(i({ref:n},d),{},{components:r})):t.createElement(g,i({ref:n},d))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},3355:function(e,n,r){r.r(n),r.d(n,{assets:function(){return c},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return s}});var t=r(3117),o=(r(7294),r(3905));const a={},i="GCP",l={unversionedId:"providers/gcloud_iam",id:"providers/gcloud_iam",title:"GCP",description:"Prerequisites",source:"@site/docs/providers/gcloud_iam.md",sourceDirName:"providers",slug:"/providers/gcloud_iam",permalink:"/guardian/docs/providers/gcloud_iam",draft:!1,editUrl:"https://github.com/odpf/guardian/edit/master/docs/docs/providers/gcloud_iam.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Update policy rules",permalink:"/guardian/docs/guides/complex-use-case"},next:{title:"Big Query",permalink:"/guardian/docs/providers/bigquery"}},c={},s=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Access Management",id:"access-management",level:2},{value:"Config",id:"config",level:2},{value:"YAML Representation",id:"yaml-representation",level:4},{value:"<code>GCloudIAMAccountType</code>",id:"gcloudiamaccounttype",level:3},{value:"<code>GCloudIAMCredentials</code>",id:"gcloudiamcredentials",level:3},{value:"<code>GCloudIAMResourceType</code>",id:"gcloudiamresourcetype",level:3},{value:"<code>GCloudIAMResourceRoles</code>",id:"gcloudiamresourceroles",level:3},{value:"<code>GCloudIAMResourcePermission</code>",id:"gcloudiamresourcepermission",level:3}],d={toc:s};function u(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"gcp"},"GCP"),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"A service account with ",(0,o.kt)("inlineCode",{parentName:"li"},"roles/iam.securityAdmin")," role at the project/organization level")),(0,o.kt)("h2",{id:"access-management"},"Access Management"),(0,o.kt)("p",null,"Google Cloud IAM can be registered into Guardian in organization or project level by specifying the ",(0,o.kt)("inlineCode",{parentName:"p"},"credentials.resource_name")," accordingly, ",(0,o.kt)("inlineCode",{parentName:"p"},"organizations/org-id")," for an organization, and ",(0,o.kt)("inlineCode",{parentName:"p"},"projects/project-id")," for a project. A provider instance, either it is an organzation or project, is considered as Guardian resource. Google Cloud predefined and custom roles can be selected as a role during appeal creation."),(0,o.kt)("h2",{id:"config"},"Config"),(0,o.kt)("h4",{id:"yaml-representation"},"YAML Representation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# project\ntype: gcloud_iam\nurn: my-iam\nallowed_account_types:\n  - user\n  - serviceAccount\ncredentials:\n  service_account_key: <base64 encoded service account key json>\n  resource_name: projects/gcp-project-id\nappeal:\n  allow_active_access_extension_in: "7d"\nresources:\n  - type: project\n    policy:\n      id: my_policy\n      version: 1\n    roles:\n      - id: role-1\n        name: BigQuery\n        permissions:\n          - roles/bigquery.admin\n          - roles/bigquery.dataEditor\n          - roles/bigquery.dataOwner\n      - id: role-2\n        name: Custom\n        permissions:\n          - projects/integration/roles/project.iamManager\n      - id: role-3\n        name: Api gateway\n        permissions:\n          - roles/apigateway.admin\n          - roles/apigateway.viewer\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# organization\ntype: gcloud_iam\nurn: my-iam\nallowed_account_types:\n  - user\n  - serviceAccount\ncredentials:\n  service_account_key: <base64 encoded service account key json>\n  resource_name: organizations/gcp-org-id\nappeal:\n  allow_active_access_extension_in: "7d"\nresources:\n  - type: organization\n    policy:\n      id: my_policy\n      version: 1\n    roles:\n      - id: role-1\n        name: BigQuery\n        permissions:\n          - roles/bigquery.admin\n          - roles/bigquery.dataEditor\n          - roles/bigquery.dataOwner\n')),(0,o.kt)("h3",{id:"gcloudiamaccounttype"},(0,o.kt)("inlineCode",{parentName:"h3"},"GCloudIAMAccountType")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"user")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"serviceAccount"))),(0,o.kt)("h3",{id:"gcloudiamcredentials"},(0,o.kt)("inlineCode",{parentName:"h3"},"GCloudIAMCredentials")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Fields"),(0,o.kt)("th",{parentName:"tr",align:"left"}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"resource_name")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"string")," GCP Project ID in resource name format. Example: ",(0,o.kt)("inlineCode",{parentName:"td"},"projects/my-project-id"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"organizations/my-org-id"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"service_account_key")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"string")," Service account key JSON that has ",(0,o.kt)("a",{parentName:"td",href:"#prerequisites"},"prerequisites permissions"),". On provider creation, the value should be an base64 encoded JSON key.")))),(0,o.kt)("h3",{id:"gcloudiamresourcetype"},(0,o.kt)("inlineCode",{parentName:"h3"},"GCloudIAMResourceType")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"project")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"organization"))),(0,o.kt)("h3",{id:"gcloudiamresourceroles"},(0,o.kt)("inlineCode",{parentName:"h3"},"GCloudIAMResourceRoles")),(0,o.kt)("p",null,"A user defined roles grouping single or multiple GCloud roles."),(0,o.kt)("h3",{id:"gcloudiamresourcepermission"},(0,o.kt)("inlineCode",{parentName:"h3"},"GCloudIAMResourcePermission")),(0,o.kt)("p",null,"A Google Cloud predefined role name. These can be any roles defined under Gcloud project roles list. User defined roles group them together depending on the use case"))}u.isMDXComponent=!0}}]);